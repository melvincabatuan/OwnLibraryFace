buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle-experimental:0.4.0"
    }
}
dependencies {
    repositories {
        jcenter()
    }
}


apply plugin: 'com.android.model.library'

model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            minSdkVersion.apiLevel = 15
            targetSdkVersion.apiLevel = 23
            versionCode = 100
            versionName = "1.0.0"
        }
    }


    compileOptions.with {
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }

    android.ndk {
        moduleName = "detection_based_tracker"

        cppFlags.add("-Werror")
        cppFlags.add("--debug")
        cppFlags.add("-frtti")
        cppFlags.add("-fexceptions")
        cppFlags.add("-I${file('/home/cobalt/Android/OpenCV-android-sdk/sdk/native/jni/include')}".toString())
        cppFlags.add("-I${file('src/main/jni')}".toString())

        ldLibs.addAll(["android", "log", "stdc++", "dl", "z"])
        stl = "gnustl_static"
    }

    android.sources {
        main {
            manifest.source {
                include './src/main/AndroidManifest.xml'
                srcDirs += ['./main']
            }
            java.source.srcDirs += ['./src/main']
            resources.source.srcDirs += ['./src/main']
            aidl.source.srcDirs += ['./src/main']
            res.source.srcDirs += ['./src/main/res']
        }
    }

    android.productFlavors {

        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
            File currentDir = file('./')
            currentDir = file(currentDir.absolutePath)
            ndk.ldLibs.add(currentDir.absolutePath + "/src/main/jniLibs/" + "armeabi-v7a" + "/libopencv_java3.so")
        }
    }

    android.buildTypes {
        debug {
            ndk.with {
                debuggable = true
            }
        }
        release {
            minifyEnabled = false
        }
    }
}

dependencies {
    compile project(':opencv')
}